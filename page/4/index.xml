<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CrBoy&#39;s blog</title>
    <link>https://blog.crboy.net/</link>
    <description>Recent content on CrBoy&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Thu, 29 Sep 2016 03:01:12 +0000</lastBuildDate>
    
        <atom:link href="https://blog.crboy.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>面劇團 - 「明天我們空中再見」首演</title>
        <link>https://blog.crboy.net/posts/face-to-audience-%E6%98%8E%E5%A4%A9%E6%88%91%E5%80%91%E7%A9%BA%E4%B8%AD%E5%86%8D%E8%A6%8B/</link>
        <pubDate>Wed, 06 Jun 2012 01:45:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/face-to-audience-%E6%98%8E%E5%A4%A9%E6%88%91%E5%80%91%E7%A9%BA%E4%B8%AD%E5%86%8D%E8%A6%8B/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/face-to-audience-%E6%98%8E%E5%A4%A9%E6%88%91%E5%80%91%E7%A9%BA%E4%B8%AD%E5%86%8D%E8%A6%8B/ -&lt;p&gt;嘛&amp;hellip;實在覺得自己越來越不會寫文章了 &amp;gt;&amp;quot;&amp;lt; 各位讀者敬請見諒&amp;hellip;就當這只是小弟心中的碎碎念好了~~&lt;/p&gt;
&lt;p&gt;一如往常的，又在看完面劇團的演出後回家寫 blog 了&amp;hellip;會像是個回家作業嗎？或是變成一種形式嗎？至少我不這麼認為&amp;hellip;我是相當願意把心裡的想法，無論好壞、褒貶都寫出來給所有朋友們，還有所有面劇團的團員們看的。每次結束後總聽你們說「謝謝來看戲！」那我想說「謝謝來看文！」:P 噢對了，還有就是那張問卷這麼大張，哪有空寫這麼多字啊= = 而且根本沒有「背面空白處」嘛= =&lt;/p&gt;
&lt;p&gt;好啦，來聊聊今天的心得，不過因為明天還有一場，所以今天不爆雷、不破梗！&lt;/p&gt;
&lt;p&gt;排隊的時候啊，等啊等啊等的，延後了好久才進場，中間還兩度有工作人員出來說明會延後進場，還有鞠躬道歉耶@@ 辛苦了~我相信這不是你們的問題。另外還有發海報，我是回家才打開的，我拿到的是太陽&amp;hellip;.嗯&amp;hellip;..我其實在猜會不會第一天拿到的都是太陽而第二天拿到的都是月亮呢？:P 明天就知道囉~&lt;/p&gt;
&lt;p&gt;揭幕的時候啊，相當令人驚訝的是，那個佈景啊&amp;hellip;沒想到這次的演出竟然搭了一個這麼大的景！(不能說不能說不能說啊&amp;hellip;.) 接著嘛&amp;hellip;就是好戲上演了~&lt;/p&gt;
&lt;p&gt;內容的部份說好不提的，留到明天再說。&lt;/p&gt;
&lt;p&gt;但這次我看到三位認識的演員都在挑戰自我，做出改變啊！從清純小資女孩變身為火辣女人，從憨厚警員/學生變身為地痞流氓，還有從性感熟女變成拾荒老婦又變成傻小妹&amp;hellip;這絕對是演技上的一大挑戰，對認識他們的觀眾們，也絕對是相當大的震撼。&lt;/p&gt;
&lt;p&gt;還有舞台表演上，這次加上了很特別的元素，一開始有點疑惑，但其實我還滿喜歡的！:D 雖然沒有很強調，但我認為用這個元素所表現的內容，是一個相當值得思考的議題。人與人之間的距離、面對他人的每一張臉、面具下的真實又是什麼樣子？另外也很特別的是&amp;hellip;..是&amp;hellip;..不能說不能說不能說&amp;hellip;XD 很妙，用這樣的方法去表現這個橋段！不曉得是從哪邊學的？或是團員們自己發想的呢？酷~!!&lt;/p&gt;
&lt;p&gt;劇本部分，其實不是很好理解，時間軸相當破碎，所以因果跟時空關係需要好好思索，但我想明天應該就會看懂了！舞台設計部分，我覺得很有趣，很巧妙的設計，這個部分其實沒有什麼特別的想法，但因為我坐在面對舞台的左側，所以電梯那一幕的男播音員的臉就這樣被擋住了&amp;hellip;我想也許往前站一點會比較好。另外也是跟臉有關係的，就是燈光的部份。有好幾個場景的燈光，照下來讓演員有很明顯的黑臉&amp;hellip;我個人認為這應該不是故意營造的效果，也許是受限於場地吧，如果可以針對這個部分調整一下我想演出會更完美！&lt;/p&gt;
&lt;p&gt;另外，看戲的時候一直有種感覺，似乎劇團對這個場地還有用到的道具都不是很熟悉？大道具的動作也一定沒有多試幾次，還有門&amp;hellip;..(嘆) 是不是因為成功廳不容易借用，所以很難有機會用正式的場地跟道具彩排呢？我不敢肯定，但若是這樣的話，我想對於演出的品質會是一個很大的傷害。雖然我只是一介草民，但是之前也略有耳聞外面的團體會在正式演出場地做很多次的排練，以期讓演出達到最好的效果。如果可以的話，也希望面劇團未來能夠多多在成功廳排練囉！我想面劇團是成大之寶，學校會很樂意提供協助的！(吧？)&lt;/p&gt;
&lt;p&gt;其實心裡還有好多東西跟想法&amp;hellip;.可是&amp;hellip;.呃&amp;hellip;..好啦我想睡覺了XD 其他留到明天一起講好了~~&lt;/p&gt;
- https://blog.crboy.net/posts/face-to-audience-%E6%98%8E%E5%A4%A9%E6%88%91%E5%80%91%E7%A9%BA%E4%B8%AD%E5%86%8D%E8%A6%8B/ - </description>
        </item>
    
    
    
        <item>
        <title>期待面劇團「明天我們空中再見」</title>
        <link>https://blog.crboy.net/posts/wait-for-fta-show/</link>
        <pubDate>Mon, 04 Jun 2012 01:33:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/wait-for-fta-show/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/wait-for-fta-show/ -&lt;p&gt;過了大概半年吧，又可以看到面劇團的演出了！:D&lt;/p&gt;
&lt;p&gt;面劇團 (Face To Audience, FTA) 是成大學生自己組成的一個劇團，最初是由一群修「表演藝術概論」通識的學生聚在一起所組成的。過去曾經舉行過兩場公演，每場各有兩個場次。地點都在成大的鳳凰樹劇場。&lt;/p&gt;
&lt;p&gt;雖然我不是面劇團的團員，也跟裡面的團員一個都不認識，但過去的「四」個演出場次恰好我都參與到了！說來實在是緣份，最初不過是看到學校寄來的信，幫忙宣傳了面劇團的演出，那是第一場的「影痴謀殺」，而他的介紹文案相當的吸引我。雖然到了現在，我已經忘記當時為什麼會被文案吸引，但我還清楚的記得看戲的感動，還有結束後心中幫他們打了一百分滿分的評價！&lt;/p&gt;
&lt;p&gt;隔天，我又傻傻的跑去排隊&amp;hellip;也不曉得是為了什麼，但就很想再看一次，再好好品嚐他們的演出。對了，說到排隊&amp;hellip;因為事前也不曉得要索票還是什麼的，反正我就相當懶惰，所以過去的四場演出，我都是當天提早到達現場排隊，等到開演前五分鐘才能依序入場的。不過，我還記得我運氣相當好，每次都坐到不錯的位置，都在中間靠前面耶！一定是我平常有做好事的關係。噢，然後那天有去找其中兩位演員拍照 :P，正妹小萍跟型男小張，開口的時候我整個超尷尬的XD&lt;/p&gt;
&lt;p&gt;隔了半年，面劇團帶來「一躍之下，」作為校慶賀歲(?)演出。呃&amp;hellip;因為擔心太過熱門，所以很早 (超級早) 就去排隊了，相當尷尬的排了一個第一名&amp;hellip;記得當天不但下雨，而且稍早有另一場活動在那個場地舉辦，所以整個相當狼狽，又找不到地方可以等待。直到面劇團的團員開始佈置，我才終於有地板可以坐XD&lt;/p&gt;
&lt;p&gt;「一躍之下，」我相當喜歡，也許除了演出以外，對於劇本也多了一份親切感吧。故事是以成大為出發點，描述男主角阿堂因為辛酸都往肚子裡吞，被教授冷嘲熱諷，還無法如期畢業，種種的壓力下，他選擇了&amp;hellip;從電機系的天井向下墜落。看戲當時的我，也是一個延畢中的研究生，也常常假裝堅強，戴著面具面對這個世界。這個故事，相當令人鼻酸。我到現在依然無法忘懷劇中那句台詞：「我以為我可以讓他們後悔，沒想到最後悔的，是我自己。」 (哭)&lt;/p&gt;
&lt;p&gt;後來不久，有段小插曲。某天去買水餃之家，當天很多人，我要外帶，當我站在那裡等的時候，發現旁邊有一桌的男女相當眼熟！竟然是&amp;hellip;.正妹小萍跟型男小張！！！噢，其實我一直都記得他們兩個的名字，但是擔心被當成變態，我就當做不記得了。當時鼓起勇氣去跟他們打招呼，首先偽裝成粉絲問「請問你們是面劇團的團員嗎？」『呃&amp;hellip;.是&amp;hellip;..』「我有看過你們的演出~」天啊太尷尬的開場白了XD 沒想到後來提到我有在部落格寫他們的文章，竟然戳中小張的驚訝點 (我的意思是，讓他相當驚訝)，原來他們不只是曾經回覆過而已，竟然還記得我，真害羞 &amp;gt;////&amp;lt; 啊，對了，他們不是兩個人去吃，還有第三位同學。但是&amp;hellip;呃&amp;hellip;嗯&amp;hellip;.哈哈&amp;hellip;..我認不得他 orz&lt;/p&gt;
&lt;p&gt;其實說實在話，我並沒有一直持續追著面劇團的消息，但是緣份讓我們碰在一起(?)。這次面劇團有公演的消息其實我是在網路索票當天早上才知道的，這次我終於可以不用再很可憐的排隊了啊！！！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;ticket.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;雖然說去取票的時候一直很擔心會不會被白眼說「面劇團的票已經有夠難搶了你還索這麼多，是不是要拿票去賣啊？」不過還好沒事啦&amp;hellip;.XD 好歹我以前都是兩場都去的，這次去兩場過份嗎？XDDD 現在相當期待明後兩天的演出啊~我其實也不知道該用怎樣的心情去面對，畢竟如果對一樣事物抱著相當高的期待，即使這樣事物已經相當棒了，心中的評價依然會減分&amp;hellip;但是，我知道面劇團相當優秀啊！而且他們也很努力&amp;hellip;真矛盾 orz。無論如何，我相信他們會再一次帶來很棒的演出。 :)&lt;/p&gt;
&lt;p&gt;「明天我們空中再見」的演出時間是 6/5, 6/6，晚上 7:00，地點在成大光復校區成功廳，如果你正在閱讀這篇文章，如果你也對面劇團很感興趣，建議你可以來看唷！嗯&amp;hellip;我知道你沒有票，但你只要跟我一樣有不屈不撓的精神，當天早點來現場排隊，相信你一定可以成功入場的XD&lt;/p&gt;
&lt;p&gt;&amp;hellip;&amp;hellip;.唉，也許未來就沒機會看到面劇團的演出了&amp;hellip; :( 等到離開了成大，不要說有沒有收到消息，就算收到了消息，也沒有權限索票了。當完兵後，勢必得去工作，好像也很難排隊&amp;hellip;..嗯，總之怎麼想都不可能 (攤手) 就把這兩天的演出，當做是對面劇團留下一個最美好的回憶吧&amp;hellip;&lt;/p&gt;
- https://blog.crboy.net/posts/wait-for-fta-show/ - </description>
        </item>
    
    
    
        <item>
        <title>PHP imagettftext() could not read font</title>
        <link>https://blog.crboy.net/posts/php-imagettftext-could-not-read-font/</link>
        <pubDate>Thu, 31 May 2012 14:03:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/php-imagettftext-could-not-read-font/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/php-imagettftext-could-not-read-font/ -&lt;p&gt;今天撞牆撞很大&amp;hellip;.由於手邊在碰的一個專案裡面需要產生類似驗證碼的圖片，他用了 &lt;code&gt;imagecreate()&lt;/code&gt;, &lt;code&gt;imagettftext()&lt;/code&gt;, &lt;code&gt;imagesetpixel()&lt;/code&gt; 這些 PHP functions。聽說這支程式「曾經」是可以 work 的，不過在我手上就不 work，為了證明不是人品問題，一定要把這個 bug 修掉！&lt;br&gt;
一開始我傻傻的在程式碼裡面翻找，但這樣實在太沒效率了，身為一個專業的&amp;hellip;.呃&amp;hellip;雜工，一定要懂得善用工具！所以我用了&amp;hellip;.. command line php&amp;hellip;..&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ php image.php &amp;gt; /dev/null
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;對啦，只不過是測試環境從 apache 換到 command line 底下了，這樣是有比較強嗎？有喔~因為我的測試環境有裝 &lt;a href=&#34;http://xdebug.org/&#34;&gt;xdebug&lt;/a&gt;，只要有 enable 就可以在 command line 底下看到 debugging messages，不用特別打開 stack trace。至於最後面把 standard output 導向 &lt;code&gt;/dev/null&lt;/code&gt; 是為了不想看到他輸出的那張不完整的圖，那會干擾畫面。&lt;br&gt;
首先第一步，我忘記詳細的訊息了，大意是說 &lt;code&gt;imagecreate() is undefined&lt;/code&gt; 等等，這時候當然要去找找這函式有沒有需要什麼相依的 library 啊！找了一下發現，這些函式是由 PHP 的 GD module 所提供的，所以我迅速的安裝了 GD 模組&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ sudo apt-get install php5-gd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;接著，才是重頭戲的開始&amp;hellip;.&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;裝好 GD 模組之後，那些 function 都可以使用了，但是我卻一直收到這個錯誤訊息&amp;hellip;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PHP Warning:  imagettftext(): Could not read font .....(後略)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;當然這訊息也是伴隨著 stack trace 的，看看傳進去的字型參數，用的是相對路徑 &lt;code&gt;include/font/font.ttf&lt;/code&gt;，當下懷疑是不是找不到檔案，用 &lt;code&gt;realpath()&lt;/code&gt; 來幫忙看看&amp;hellip;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;echo realpath($font_path);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但是，咦，怎麼什麼都沒出現？大概花了 30 秒我才發現我做了蠢事&amp;hellip;.我已經把 standard output 丟掉了啊XD 上網找了一下「php stderr」立刻找到應該要這樣做&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;file_put_contents(&#39;php://stderr&#39;, realpath($font_path));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;印出來之後，發現我給他的路徑是正確的，怎麼會這樣呢？苦惱許久，才想到要去查查 imagettftext() 的 &lt;a href=&#34;http://php.net/manual/en/function.imagettftext.php&#34;&gt;manual&lt;/a&gt;，發現了驚人的事情！&lt;br&gt;
原來，某些版本的 GD 會在你給他的路徑是相對路徑時，使用環境變數 &lt;code&gt;GDFONTPATH&lt;/code&gt; 當作前綴，並且在最後補上 &lt;code&gt;.ttf&lt;/code&gt;。另外，版本低於 2.0.18 的 GD 還不允許路徑裡面有空白字元。檢查了一下&amp;hellip;嗯，路徑沒有空白字元，那會不會是路徑問題？參考官方 manual 提供的 sample code：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;?php
// Set the enviroment variable for GD
putenv(&#39;GDFONTPATH=&#39; . realpath(&#39;.&#39;));

// Name the font to be used (note the lack of the .ttf extension)
$font = &#39;SomeFont&#39;;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;我自己設定好了正確的 &lt;code&gt;GDFONTPATH&lt;/code&gt; 也把後面的 &lt;code&gt;.ttf&lt;/code&gt; 拿掉，依然不 work&amp;hellip;.到這裡我已經快崩潰了&amp;hellip;.即使我發瘋似的交叉測試拿掉或加上 &lt;code&gt;.ttf&lt;/code&gt;、更改路徑、使用絕對路徑等等，都還是失敗。&lt;br&gt;
接著我又開始想，會不會是別的原因？來看看檔案權限好了&amp;hellip;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l include/font/font.ttf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;很好，檔案權限是 644 (&lt;code&gt;rw-r--r--&lt;/code&gt;)，應該沒問題吧？算了，死馬當活馬醫，改成 777!!&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ chmod 777 include/font/font.ttf
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;可想而知，還是炸了&amp;hellip;..&lt;br&gt;
在網路上找來找去，碰到類似問題的人大多是這幾種狀況：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;路徑錯誤 (前面提到的相對路徑問題)&lt;/li&gt;
&lt;li&gt;檔案從 windows 傳到 un&lt;em&gt;x 上就無法 work 了 (因為 un&lt;/em&gt;x 對檔名是 case-sensitive 的)&lt;/li&gt;
&lt;li&gt;把 &lt;code&gt;ttf&lt;/code&gt; 寫成 &lt;code&gt;tff&lt;/code&gt; (這是他自己耍笨了&amp;hellip;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;很多人問問題會列出自己的 GD 版本，那我也來看看有沒有什麼端倪&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ php -i
...
gd

GD Support =&amp;gt; enabled
GD Version =&amp;gt; 2.0
FreeType Support =&amp;gt; enabled
FreeType Linkage =&amp;gt; with freetype
FreeType Version =&amp;gt; 2.4.8
T1Lib Support =&amp;gt; enabled
GIF Read Support =&amp;gt; enabled
GIF Create Support =&amp;gt; enabled
JPEG Support =&amp;gt; enabled
libJPEG Version =&amp;gt; unknown
PNG Support =&amp;gt; enabled
libPNG Version =&amp;gt; 1.2.46
WBMP Support =&amp;gt; enabled

Directive =&amp;gt; Local Value =&amp;gt; Master Value
gd.jpeg_ignore_warning =&amp;gt; 0 =&amp;gt; 0
...
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;就沒問題嘛 orz&lt;br&gt;
我已經確定我的路徑是完全正確的，而且也是絕對路徑，檔案權限也確定是可以讀取的，GD module 看起來沒有什麼錯，那到底是什麼問題？心灰意冷之際，我想說不然拿現有的其他字型來試試看好了。事實上該專案裡本來有好幾個字型檔，我早就試過幾個都不 work，結果沒想到改成用自己系統本來有的字型，就成功了！太崩潰了!!! 可是還是很高興，立馬回到本來的程式上，加上剛剛使用的字型的絕對路徑，一切都搞定了！(超開心)&lt;br&gt;
所以總結而言，我一開始的環境沒辦法正確執行這個程式，只有兩個原因&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;缺少 php-gd&lt;/li&gt;
&lt;li&gt;字型檔有某種錯誤&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我對字型不太有研究，所以就無法深究該字型檔究竟有什麼問題，畢竟用 &lt;code&gt;file&lt;/code&gt; 去看他還是個正常的 True Type font 啊&amp;hellip;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ file font.ttf
font.ttf: TrueType font data
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;會不會跟編碼有關係呢？可是我用的只是一個 &lt;code&gt;&amp;quot;1&amp;quot;&lt;/code&gt; 耶&amp;hellip;..&lt;br&gt;
好吧，雖然還是帶著懷疑，不過主要的問題算是解決了，結案！！！&lt;/p&gt;
- https://blog.crboy.net/posts/php-imagettftext-could-not-read-font/ - </description>
        </item>
    
    
    
        <item>
        <title>對 Vim 啟動過程做效能分析</title>
        <link>https://blog.crboy.net/posts/profiling-vim-startup/</link>
        <pubDate>Wed, 30 May 2012 11:09:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/profiling-vim-startup/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/profiling-vim-startup/ -&lt;p&gt;昨天在&lt;a href=&#34;http://www.plurk.com/m/p/ghzky5&#34;&gt;噗浪上&lt;/a&gt;看到有趣的分享，是一篇 StackOverflow 上的文章：&lt;a href=&#34;http://stackoverflow.com/questions/1687799/profiling-vim-startup-time&#34;&gt;Profiling vim startup time&lt;/a&gt;。&lt;br&gt;
其實講的東西相當單純，就是 vim 提供了 &lt;code&gt;--startuptime&lt;/code&gt; 選項，後面接上 log 檔的檔名，他會幫你把啟動過程中每個部份所花的時間都記錄下來，有個別時間也有累計時間。例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vim --startuptime vim.log
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;然後就可以看 &lt;code&gt;vim.log&lt;/code&gt; 的內容來了解自己啟動 vim 的時候在哪個部分花最多時間囉。對於 vim plugin 裝很多又想瘦身的朋友應該很實用。:)&lt;/p&gt;
&lt;p&gt;嗯&amp;hellip;..身為一個程式語言 (vim script) 的 interpreter&amp;hellip;.果然會出現這種東西XD&lt;/p&gt;
- https://blog.crboy.net/posts/profiling-vim-startup/ - </description>
        </item>
    
    
    
        <item>
        <title>Git on Windows 安裝筆記</title>
        <link>https://blog.crboy.net/posts/git-on-windows/</link>
        <pubDate>Fri, 25 May 2012 00:25:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/git-on-windows/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/git-on-windows/ -&lt;p&gt;Git 是一套很棒的分散式版本控制系統。不過由於它一直是在 Linux 上生長的，對於在 Windows 上使用來說其實稍嫌麻煩。&lt;/p&gt;
&lt;h1 id=&#34;windows-上的各種-git&#34;&gt;Windows 上的各種 Git&lt;/h1&gt;
&lt;p&gt;在網路上搜尋通常會找到 Git for Windows 跟 msysGit 這兩個不同的名詞，我過去一直沒辦法很清楚的把他們兩者區分開來。根據 &lt;a href=&#34;http://msysgit.github.com/&#34;&gt;msysgit 在 github 上的首頁&lt;/a&gt; 與 &lt;a href=&#34;http://stackoverflow.com/questions/3672272/msysgit-vs-git-for-windows&#34;&gt;StackOverflow 上的討論&lt;/a&gt;，我目前的理解是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;msysGit 是 msys + Git 的完整環境，包含了 build 程式用的 toolchain，同時他的執行檔是直接在 user (或者該說是 developer) 的機器上 compile 出來的，使用者隨時可以透過 &lt;code&gt;git pull&lt;/code&gt; 取得最新版的 msysGit 來編譯，算是給 git 開發者用的。&lt;/li&gt;
&lt;li&gt;Git for Windows 可說是 msysGit 的「產出」，是預先 compile 好的 &lt;code&gt;git.exe&lt;/code&gt; 還有其他執行檔們&amp;hellip;其中只包含了基本的 msys 環境、有 bash、ssh、甚至 Git GUI 等工具，但是沒有 toolchain，適合單純使用（操作）git 的使用者安裝。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外還可能會找到一個更有名的東西，稱為 &lt;a href=&#34;http://code.google.com/p/tortoisegit/&#34;&gt;TortoiseGit&lt;/a&gt;，這是知名專案 &lt;a href=&#34;http://tortoisesvn.net/&#34;&gt;TortoiseSVN&lt;/a&gt; 的相關專案，顧名思義，就是烏龜殼包了 Git 啦！要注意的是，他只是一個 Git frontend，需要指定相關執行檔 (如 &lt;code&gt;git.exe&lt;/code&gt;) 的位置才能工作。特別的是，他本身附帶了 PuTTY 的 ssh client (&lt;code&gt;plink.exe&lt;/code&gt;)，讓使用者可以透過比較符合 windows 使用習慣的方式來使用 ssh，如果不是很熟 linux 或是 GUI 狂熱份子可能會比較喜歡。XD&lt;/p&gt;
&lt;p&gt;註：知名專案 cygwin 也可以安裝 git 並在 command line 下使用，但對於沒在使用 cygwin 的使用者而言麻煩得多，故此處不介紹。&lt;/p&gt;
&lt;p&gt;這篇文章分成三個部分：首先介紹 Git for Windows (免 compile 的那個) 的安裝，接著是 msysGit (需要 compile 的那個) 的安裝，最後會介紹 TortoiseGit 的安裝，並以一個簡單的 git clone 作為結束。如果是一般單純想在 windows 上用 git 的人，可以只看第一跟第三部分即可，第二部分就當作參考資料吧！&lt;/p&gt;
&lt;p&gt;另外報告一下我用的環境：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Windows 7 32bit&lt;/li&gt;
&lt;li&gt;msysGit 1.7.10&lt;/li&gt;
&lt;li&gt;TortoiseGit 1.7.9 32bit&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;git-for-windows-wingit&#34;&gt;Git for Windows (WinGit)&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;到 &lt;a href=&#34;http://code.google.com/p/msysgit/&#34;&gt;msysGit 的官方網站&lt;/a&gt;下載 &lt;code&gt;Git-(版本)-(日期).exe&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;開始安裝&lt;/p&gt;
&lt;p&gt;安裝精靈&lt;br&gt;
&lt;img src=&#34;wingit/01.png&#34; alt=&#34;01&#34;&gt;
&lt;img src=&#34;wingit/02.png&#34; alt=&#34;02&#34;&gt;&lt;/p&gt;
&lt;p&gt;預設的安裝位置，TortoiseGit 預設也是搜尋這個位置，建議不要改&lt;br&gt;
&lt;img src=&#34;wingit/03.png&#34; alt=&#34;03&#34;&gt;&lt;/p&gt;
&lt;p&gt;因為環境是 Windows 7，我就不加入快速啟動了。另外，這一頁最下面的選項 (被遮住了) 如果勾選的話，可以把 Windows 本來的 command line (&lt;code&gt;cmd.exe&lt;/code&gt;) 的字型也變好看，是否要用就見仁見智囉&lt;br&gt;
&lt;img src=&#34;wingit/04.png&#34; alt=&#34;04&#34;&gt;
&lt;img src=&#34;wingit/05.png&#34; alt=&#34;05&#34;&gt;&lt;/p&gt;
&lt;p&gt;建議保留 Git Bash，至於要不要把 unix tools 加入 windows command line 的 path 就看人了，如果不了解的話，保留預設值 (第一個) 即可&lt;br&gt;
&lt;img src=&#34;wingit/06.png&#34; alt=&#34;06&#34;&gt;&lt;/p&gt;
&lt;p&gt;關於換行格式的問題。除非有特殊考量，一般使用第一個選項會比較通用&lt;br&gt;
&lt;img src=&#34;wingit/07.png&#34; alt=&#34;07&#34;&gt;
&lt;img src=&#34;wingit/08.png&#34; alt=&#34;08&#34;&gt;
&lt;img src=&#34;wingit/09.png&#34; alt=&#34;09&#34;&gt;&lt;/p&gt;
&lt;p&gt;安裝完成後，桌面上會出現 Git Bash 的 icon&lt;br&gt;
&lt;img src=&#34;wingit/10.png&#34; alt=&#34;10&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;桌面上按右鍵就看得到快顯功能表已經新增 Git 相關選項了，安裝完成！&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;wingit/11.png&#34; alt=&#34;11&#34;&gt;&lt;/p&gt;
&lt;p&gt;這是 Git Bash 的執行畫面，會操作 Linux 的人應該會很容易上手&lt;br&gt;
&lt;img src=&#34;wingit/12.png&#34; alt=&#34;12&#34;&gt;&lt;/p&gt;
&lt;p&gt;這個則是 Git GUI 的執行畫面，如果所在目錄不是 git repository 的話，只會有這三個選項&lt;br&gt;
&lt;img src=&#34;wingit/13.png&#34; alt=&#34;13&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以 clone repository (就是 &lt;code&gt;git-clone&lt;/code&gt;)&lt;br&gt;
&lt;img src=&#34;wingit/14.png&#34; alt=&#34;14&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果在 git repo 中執行 Git GUI 的話，會看到一個具有完整 git 功能的畫面&lt;br&gt;
&lt;img src=&#34;wingit/15.png&#34; alt=&#34;15&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果是 Linux user，或是只想要以最簡單的方式使用 git 的話，其實只要安裝這個就夠了。透過 Git Bash 就可以像一般 Linux 上操作，透過 Git GUI 也可以進行同樣功能的操作。&lt;/p&gt;
&lt;p&gt;需要注意的是，如果單純使用 WinGit 的話，要使用 ssh 必須手動透過指令去設定。就像在 Linux 上一樣，ssh key 放在 &lt;code&gt;~/.ssh&lt;/code&gt; 底下，可以透過 git bash 去執行 &lt;code&gt;ssh-keygen&lt;/code&gt; 來產生 key。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;msysgit-參考用大部分人可跳過此段&#34;&gt;msysGit (參考用，大部分人可跳過此段)&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;到 &lt;a href=&#34;http://code.google.com/p/msysgit/&#34;&gt;msysGit 的官方網站&lt;/a&gt;下載 &lt;code&gt;msysGit-fullinstall-(版本)-(日期).exe&lt;/code&gt; (或是 &lt;code&gt;netinstall&lt;/code&gt; 版，但是因為某些意外，他們的安裝行為有微妙的差異)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安裝 msysGit&lt;/p&gt;
&lt;p&gt;選擇安裝位置&lt;br&gt;
&lt;img src=&#34;msysgit/01.png&#34; alt=&#34;01&#34;&gt;&lt;/p&gt;
&lt;p&gt;這邊有件奇妙的事情，fullinstall 版的預設會在這目錄下建立一個 &lt;code&gt;msysgit&lt;/code&gt; 的目錄，造成真正的安裝路徑為 &lt;code&gt;C:\msysgit\msysgit&lt;/code&gt;，而 netinstall 版就沒有這個問題。這裡我們保留預設值，雖然奇怪但不影響後面的操作。&lt;/p&gt;
&lt;p&gt;安裝中&lt;br&gt;
&lt;img src=&#34;msysgit/02.png&#34; alt=&#34;02&#34;&gt;&lt;/p&gt;
&lt;p&gt;檔案複製完成後，&lt;strong&gt;自動&lt;/strong&gt;開始編譯&lt;br&gt;
&lt;img src=&#34;msysgit/03.png&#34; alt=&#34;03&#34;&gt;&lt;/p&gt;
&lt;p&gt;編譯完成&lt;br&gt;
&lt;img src=&#34;msysgit/04.png&#34; alt=&#34;04&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;tortoisegit&#34;&gt;TortoiseGit&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;到 &lt;a href=&#34;http://code.google.com/p/tortoisegit/&#34;&gt;TortoiseGit 的官方網站&lt;/a&gt;下載 &lt;code&gt;TortoiseGit-(版本)-(32bit|64bit).msi&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;安裝 TortoiseGit&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;tortoisegit/01.png&#34; alt=&#34;01&#34;&gt;&lt;br&gt;
&lt;img src=&#34;tortoisegit/02.png&#34; alt=&#34;02&#34;&gt;&lt;br&gt;
&lt;img src=&#34;tortoisegit/03.png&#34; alt=&#34;03&#34;&gt;&lt;/p&gt;
&lt;p&gt;TortoiseGit 似乎比較想要我們用 TortoisePLink，那就用用看吧！
&lt;img src=&#34;tortoisegit/04.png&#34; alt=&#34;04&#34;&gt;&lt;br&gt;
&lt;img src=&#34;tortoisegit/05.png&#34; alt=&#34;05&#34;&gt;&lt;br&gt;
&lt;img src=&#34;tortoisegit/06.png&#34; alt=&#34;06&#34;&gt;&lt;br&gt;
&lt;img src=&#34;tortoisegit/07.png&#34; alt=&#34;07&#34;&gt;&lt;br&gt;
&lt;img src=&#34;tortoisegit/08.png&#34; alt=&#34;08&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果你是安裝 msysGit (自行編譯那個) 的話，啟動 TortoiseGit 的時候會跳出錯誤訊息，他找不到 &lt;code&gt;git.exe&lt;/code&gt;，也就是 Git 的執行檔。如果是安裝 WinGit 的話就沒有這個問題&lt;br&gt;
&lt;img src=&#34;tortoisegit/09.png&#34; alt=&#34;09&#34;&gt;&lt;/p&gt;
&lt;p&gt;如同前面所說的，msysGit 被裝在 &lt;code&gt;C:\msysgit\msysgit&lt;/code&gt; 裡了，而我們想要找的執行檔位於 &lt;code&gt;bin&lt;/code&gt; 底下&lt;br&gt;
&lt;img src=&#34;tortoisegit/10.png&#34; alt=&#34;10&#34;&gt;&lt;/p&gt;
&lt;p&gt;選好後，「Git.exe Path:」的後面應該會出現這樣的路徑，如果 git 被安裝在別的地方，可自行變通&lt;br&gt;
&lt;img src=&#34;tortoisegit/11.png&#34; alt=&#34;11&#34;&gt;&lt;/p&gt;
&lt;p&gt;此外，不管使用那個版本的 Git backend，都必須設定自己的名字與 email，這兩項資訊在 Git 中是相當必要的&lt;br&gt;
&lt;img src=&#34;tortoisegit/12.png&#34; alt=&#34;12&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;產生 ssh key&lt;/p&gt;
&lt;p&gt;由於我們打算運用 putty 來連線，所以要產生專門給 putty 用的 ssh key，這跟一般 Linux 上在用的 OpenSSH 的 private key 格式是不同的。&lt;/p&gt;
&lt;p&gt;打開 Puttygen&lt;br&gt;
&lt;img src=&#34;tortoisegit/13.png&#34; alt=&#34;13&#34;&gt;&lt;/p&gt;
&lt;p&gt;按下 Generate 即可自動產生一把 key，有趣的是他會要求你移動滑鼠來產生亂數，用以生成這把 key。(在 Linux 上用 ssh-keygen 就不用這樣，是為了好玩還是 windows 沒有亂數產生器啊？)&lt;br&gt;
&lt;img src=&#34;tortoisegit/14.png&#34; alt=&#34;14&#34;&gt;&lt;/p&gt;
&lt;p&gt;邊動滑鼠就可以看到進度邊跑&lt;br&gt;
&lt;img src=&#34;tortoisegit/15.png&#34; alt=&#34;15&#34;&gt;&lt;/p&gt;
&lt;p&gt;產生出來的 key，Puttygen 會幫你把 public key 顯示出來，可以自定 comment，並利用 Save public key 將其輸出。這把 public key 就是用來提供給 git server 管理者用的身分憑證。&lt;br&gt;
&lt;img src=&#34;tortoisegit/16.png&#34; alt=&#34;16&#34;&gt;&lt;/p&gt;
&lt;p&gt;如果事前已經有在其他地方產生過 OpenSSH 格式的 private key，可以透過上方選單中的 Conversions -&amp;gt; Import 來匯入，或是用 Load 的功能也可以匯入其他格式的 ssh key。匯入後跟剛產生一把新的狀況是一樣的，可以繼續下面的步驟。&lt;/p&gt;
&lt;p&gt;接下來就可以利用 Save private key 來匯出跟那把 public key 對應的 private key 了 (好拗口)。要特別注意的是，這把 private key (相當於密碼) 不可以弄丟，也不可以洩漏。萬一弄丟，那對應的 public key 也就沒辦法使用了，如果洩漏的話則有身分被盜用的危險！要注意！(就相當於密碼不能忘記也不可以洩漏一樣)&lt;/p&gt;
&lt;p&gt;為了更好的安全性，建議輸入 passphrase 保護這把 private key。如果設定了 passphrase，則每次使用到這把 key 的時候都得輸入 passphrase。有些人會覺得奇怪，這樣跟直接用密碼登入有什麼不一樣呢？最大的不同就是，密碼登入是利用密碼作為憑證，有密碼的人就可以登入。透過 key 登入是利用 key 作為憑證，別人拿不到 key 就沒辦法盜用身分 (除非對方有很強大的運算能力，這不在一般討論範圍內)，而 passphrase 是用來保護 key 沒辦法被盜用的措施，此舉可達成雙因素認證，比密碼認證更安全！(有個說法是，沒有用 passphrase 的 key 就跟把密碼存成文字檔放在電腦裡一樣)&lt;/p&gt;
&lt;p&gt;如果沒有輸入 passphrase，會跳出警告。&lt;br&gt;
&lt;img src=&#34;tortoisegit/17.png&#34; alt=&#34;17&#34;&gt;&lt;/p&gt;
&lt;p&gt;可以利用 Pageant 幫我們管理 ssh key (因為一個人可能同時有很多把 key)&lt;br&gt;
&lt;img src=&#34;tortoisegit/18.png&#34; alt=&#34;18&#34;&gt;&lt;/p&gt;
&lt;p&gt;按下 Add Key&lt;br&gt;
&lt;img src=&#34;tortoisegit/19.png&#34; alt=&#34;19&#34;&gt;
{% asset_img tortoisegit/19.png %}&lt;/p&gt;
&lt;p&gt;選擇之前做好的 ppk 格式的 key&lt;br&gt;
&lt;img src=&#34;tortoisegit/20.png&#34; alt=&#34;20&#34;&gt;&lt;/p&gt;
&lt;p&gt;這樣就匯入一把 ppk 格式的 ssh key 了&lt;br&gt;
&lt;img src=&#34;tortoisegit/21.png&#34; alt=&#34;21&#34;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;初步使用以確定設定正常&lt;/p&gt;
&lt;p&gt;Git clone 看看&lt;br&gt;
&lt;img src=&#34;tortoisegit/22.png&#34; alt=&#34;22&#34;&gt;&lt;/p&gt;
&lt;p&gt;輸入 URL，雖然我搞不太清楚他的格式，不過似乎 ssh 不用寫 &lt;code&gt;ssh://&lt;/code&gt;，&lt;code&gt;git://&lt;/code&gt; 之類的才需要特別寫&lt;br&gt;
&lt;img src=&#34;tortoisegit/23.png&#34; alt=&#34;23&#34;&gt;&lt;/p&gt;
&lt;p&gt;這個例子裡，我用另一台虛擬機器(192.168.2.12)，以 gitolite 架了一個 git server，如果是使用別人提供的服務，請洽詢系統管理員提供「帳號」、「主機位址」跟「repo 名稱」。底下的 Load Putty Key 也可以用來載入 ssh key，跟之前在 Pageant 上做的有一樣的效果。&lt;/p&gt;
&lt;p&gt;由於是第一次連到此主機，會跳出警告。請跟您的系統管理員確認主機的 host key fingerprint，如果跟畫面中「ssh-rsa 2048 21:89:3a:38:&amp;hellip;&amp;hellip;」位置所顯示的 fingerprint 顯示的不同 (你看到的會跟圖上不一樣)，請不要連線，你可能已經遭受某種網路攻擊&lt;br&gt;
&lt;img src=&#34;tortoisegit/24.png&#34; alt=&#34;24&#34;&gt;&lt;/p&gt;
&lt;p&gt;之前在製作 private key 的時候有用 passphrase 進行保護的話，會在這時候請你輸入&lt;br&gt;
&lt;img src=&#34;tortoisegit/25.png&#34; alt=&#34;25&#34;&gt;&lt;/p&gt;
&lt;p&gt;飛天烏龜克隆中&lt;br&gt;
&lt;img src=&#34;tortoisegit/26.png&#34; alt=&#34;26&#34;&gt;
結束後，就可以在目標目錄中看到 clone 回來的東西，也就確定我們的安裝是正常的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&#34;總結&#34;&gt;總結&lt;/h1&gt;
&lt;p&gt;對大部分人來說，使用 WinGit + TortoiseGit 就沒問題了，除非是需要進行 git 本身的開發才需要 checkout git source code。至於我個人實在很不能接受複雜的 TortoiseGit，使用 WinGit (Git Bash) 最符合我的習慣，偶爾可以透過 Git GUI 作為輔助吧。&lt;/p&gt;- https://blog.crboy.net/posts/git-on-windows/ - </description>
        </item>
    
    
    
        <item>
        <title>「cannot open shared object file」的解決方案</title>
        <link>https://blog.crboy.net/posts/solution-for-cannot-open-shared-object/</link>
        <pubDate>Wed, 23 May 2012 15:20:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/solution-for-cannot-open-shared-object/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/solution-for-cannot-open-shared-object/ -&lt;p&gt;有時候執行一些指令，會碰到下面這樣的訊息：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;error while loading shared libraries: libiconv.so.2: cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在這個例子中，我們的程式找不到 &lt;code&gt;libiconv.so.2&lt;/code&gt; 這個 dynamic library。那麼應該怎麼解決呢？&lt;/p&gt;
&lt;p&gt;首先必須找到系統中的 &lt;code&gt;libiconv.so.2&lt;/code&gt;，下面四條指令選一條作就好：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ locate libiconv.so.2
$ whereis libiconv.so.2
$ find /usr /lib -name libiconv.so.2
$ find / -name libiconv.so.2 2&amp;gt;/dev/null
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這時候就可以找出函式庫位置，例如：&lt;code&gt;/usr/local/lib/libiconv.so&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;萬一沒有找出來的話，就要自行安裝了。&lt;a href=&#34;http://www.techsww.com/tutorials/libraries/libiconv/installation/installing_libiconv_on_ubuntu_linux.php&#34;&gt;這篇文章&lt;/a&gt;有教該如何安裝 libiconv，如果是其他函式庫的話可以自行變通。&lt;/p&gt;
&lt;p&gt;找到位置之後，應該怎麼做呢？如果我們有 root 權限的話，可以把函式庫所在路徑寫入 &lt;code&gt;/etc/ld.so.conf&lt;/code&gt;，再重新產生 ld 的 cache 即可，如下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# echo &amp;quot;/usr/local/lib&amp;quot; &amp;gt;&amp;gt; /etc/ld.so.conf # 注意! 要用 &amp;gt;&amp;gt; 而非 &amp;gt;！
# ldconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在某些系統中，&lt;code&gt;/etc/ld.so.conf&lt;/code&gt; 可能會預設加上 &lt;code&gt;include /etc/ld.so.conf.d/*.conf&lt;/code&gt; 這樣的敘述，那們我們也可以把路徑放在那個目錄下：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# echo &amp;quot;/usr/local/lib&amp;quot; &amp;gt;&amp;gt; /etc/ld.so.conf.d/usr_local_lib.conf
# ldconfig
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;這樣一來就可以讓程式順利搜尋到需要的 library 囉！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;BUT!! 玩 Linux 最重要的就是這個 BUT!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;如果我們沒有 root 權限的話該怎麼辦呢？這時候只好很可憐的自己搞定了&amp;hellip;如果需要自行編譯 library 的話，可以照著類似的步驟做，但是 prefix (也就是安裝位置) 要設定在自己的家目錄下，例如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ./configure --prefix=$HOME/libiconv
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但這邊假設系統中已經有 &lt;code&gt;/usr/local/lib/libiconv.so.2&lt;/code&gt; 這個檔案，進行以下步驟：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ echo &amp;quot;export LD_LIBRARY_PATH=/usr/local/lib:$LD_LIBRARY_PATH&amp;quot; &amp;gt;&amp;gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;原理很簡單，就是透過設定 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt; 來讓程式找得到需要的 library 檔案。修改後需要重新登入才會生效喔！&lt;/p&gt;
&lt;p&gt;但是&amp;hellip;基本上還是建議不要用後面這個方法啦，找你的系統管理員協助設定 &lt;code&gt;/etc/ld.so.conf&lt;/code&gt; 才是好主意。這裡有篇文章：&lt;a href=&#34;http://xahlee.org/UnixResource_dir/_/ldpath.html&#34;&gt;Why LD_LIBRARY_PATH is bad&lt;/a&gt;，專門在討論為什麼不要隨意使用 &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;。&lt;/p&gt;
- https://blog.crboy.net/posts/solution-for-cannot-open-shared-object/ - </description>
        </item>
    
    
    
        <item>
        <title>SSH 安全性設定筆記</title>
        <link>https://blog.crboy.net/posts/ssh-security-note/</link>
        <pubDate>Fri, 18 May 2012 14:16:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/ssh-security-note/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/ssh-security-note/ -&lt;p&gt;以下收錄可增加 ssh 安全性的各種技巧，主要的修改都在 &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt; 中，同時，修改設定後別忘了重新載入設定值或重新啟動 sshd。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;修改預設 port (可用多行開啟多個 port)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Port &amp;lt;port&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;僅監聽特定 ip (適用於多網卡/多 IP 的情形)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  ListenAddress 192.168.1.10
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;禁止 root 登入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  PermitRootlogin no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;管理者必須先以個人帳號登入，再 su 成 root，或利用 sudo 工作。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;禁止使用空密碼登入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  PermitEmptyPasswords no
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;僅允許或拒絕特定帳號或群組登入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  AllowUsers &amp;lt;user1&amp;gt; &amp;lt;user2&amp;gt; &amp;lt;user3&amp;gt;
  AllowGroups &amp;lt;group&amp;gt;
  DenyUsers *
  DenyGroups no-ssh
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;根據實驗，對於同一帳號而言，如果同時 Allow 跟 Deny 的話，結果會是 Deny 的。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;廢除密碼登錄，強迫使用 RSA/DSA 驗證&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  RSAAuthentication yes
  PubkeyAuthentication yes
  AuthorizedKeysFile %h/.ssh/authorized_keys
  PasswordAuthentication no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;並確保 user 的 &lt;code&gt;~/.ssh&lt;/code&gt; 權限為 &lt;code&gt;700&lt;/code&gt;，同時將該 user 的 public key 加入其 &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 中。Public key 的產生方式可搜尋 &lt;code&gt;ssh-keygen&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;僅允許 SSHv2&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Protocol 2
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;限制特定使用者、群組、主機或位址的登入行為，這裡以限制 &lt;code&gt;somebody&lt;/code&gt; 與 &lt;code&gt;handsomebody&lt;/code&gt; 不可使用密碼登入為例&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Match User somebody,handsomebody
  PasswordAuthentication no
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;但是要怎麼結束 Match block？我只找到有資料說「In sshd_config, Match blocks must be located at the end of the file.」，如果真是這樣，那就只好認了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 TCP wrappers 限制來源 IP&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # /etc/hosts.deny
  sshd: ALL

  # /etc/hosts.allow
  sshd: 192.168.1 1.2.3.4 # 僅允許 192.168.1.* 與 1.2.3.4 連線
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用 iptables 限制來源 IP&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # iptables -A INPUT -p tcp -m state --state NEW --source 1.2.3.4 --dport 22 -j ACCEPT
  # iptables -A INPUT -p tcp --dport 22 -j DROP
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;設定會立即生效，但若希望重開機後還能保存，需要手動儲存 iptables 的設定。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;時間鎖定 (這段直接引用並稍微修改&lt;a href=&#34;http://os.51cto.com/art/200803/68174_2.htm&#34;&gt;原作者的文字&lt;/a&gt;，有空再消化整理)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;你可以使用不同的 iptables 參數來限制到 SSH 服務的連接，讓其在一個特定的時間範圍內可以連接，其他時間不能連接。你可以在下面的任何例子中使用 &lt;code&gt;/second&lt;/code&gt;、&lt;code&gt;/minute&lt;/code&gt;、&lt;code&gt;/hour&lt;/code&gt; 或 &lt;code&gt;/day&lt;/code&gt; 開關。
第一個例子，如果一個用戶輸入了錯誤的密碼，鎖定一分鐘內不允許在訪問 SSH 服務，這樣每個用戶在一分鐘內只能嘗試一次登錄&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # iptables -A INPUT -p tcp -m state --syn --state NEW --dport 22 -m limit --limit 1/minute --limit-burst 1 -j ACCEPT
  # iptables -A INPUT -p tcp -m state --syn --state NEW --dport 22 -j DROP
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;第二個例子，設置 iptables 只允許主機 193.180.177.13 連接到 SSH 服務，在嘗試三次失敗登錄後，iptables 允許該主機每分鐘嘗試一次登錄&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # iptables -A INPUT -p tcp -s 193.180.177.13 -m state --syn --state NEW --dport 22 -m limit --limit 1/minute --limit-burst 1 -j ACCEPT
  # iptables -A INPUT -p tcp -s 193.180.177.13 -m state --syn --state NEW --dport 22 -j DROP
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;檢查相關檔案權限，不安全則不允許登入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  StrictModes yes
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;某些相關檔案權限設定若有錯誤時，可能造成安全性風險。如使用者的 ~/.ssh/authorized_keys 權限若為 666，可能造成其他人可以盜用帳號。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自訂使用者登入時顯示的 banner (話說這跟安全性有什麼關係&amp;hellip;? 大概可以用社交方式嚇跑壞人吧&amp;hellip;= =a)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  Banner /etc/ssh/banner # 任意文字檔
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;限制 su/sudo 名單&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # vi /etc/pam.d/su
  auth       required     /lib/security/$ISA/pam_wheel.so use_uid

  # visudo
  %wheel  ALL = (ALL) ALL

  # gpasswd -a user1 wheel
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;限制 ssh 使用者名單&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  # vi /etc/pam.d/sshd
  auth required pam_listfile.so item=user sense=allow file=/etc/ssh_users onerr=fail
  # echo USERNAME &amp;gt;&amp;gt; /etc/ssh_users
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;參考文章列表&#34;&gt;參考文章列表&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.hkcode.com/linux-bsd-notes/176&#34;&gt;網絡技術日誌 - SSH 安全設定&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.study-area.org/tips/ssh_tips.htm&#34;&gt;SSH 的一些安全小技巧 by Netman&lt;/a&gt; (後半段有個有趣的應用技，讓人透過 web 去暫時允許某 ip 登入 ssh，期限 5 分鐘!)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://os.51cto.com/art/200803/68174.htm&#34;&gt;高级 SSH 安全技巧&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://linux.vbird.org/linux_server/0310telnetssh.php#ssh_sshdconfig&#34;&gt;鳥哥的 Linux 私房菜&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://serverfault.com/questions/238711/force-ssh-public-key-authentication-for-specific-users&#34;&gt;Force SSH public key authentication for specific users&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://blog.crboy.net/posts/ssh-security-note/ - </description>
        </item>
    
    
    
        <item>
        <title>在 iPhone 上設定 Google 帳戶</title>
        <link>https://blog.crboy.net/posts/google-account-on-iphone/</link>
        <pubDate>Sun, 08 Apr 2012 01:42:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/google-account-on-iphone/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/google-account-on-iphone/ -&lt;p&gt;今天來耍點小技巧衝文章數。&lt;/p&gt;
&lt;p&gt;最近打算把一些我會的技巧什麼的&amp;hellip;.把它們整理起來並寫出來，未來想要查閱也比較方便。&lt;/p&gt;
&lt;p&gt;恰好之前做過一份簡報，連結在此：&lt;a href=&#34;https://docs.google.com/present/view?id=dfz2npbb_115fd4f8zcp&#34;&gt;當 Google 遇上 iPhone&lt;/a&gt;。雖然已經是 iOS5 的年代了，不過設定方式沒有差很多，大概就是畫面有點不同而已&amp;hellip;.所以就不更新了！&lt;/p&gt;
&lt;p&gt;這份簡報的內容是關於怎麼在 iPhone 上加入你的 Google 帳號。這裡說的 Google 帳號可能是 Gmail (&lt;code&gt;*@gmail.com&lt;/code&gt;) 或是 Google Apps (&lt;code&gt;*@_&amp;lt;your_domain&amp;gt;_&lt;/code&gt;) 的帳戶。內容包含：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;收信&lt;/li&gt;
&lt;li&gt;同步行事曆(特別是&lt;strong&gt;帳號底下有多個行事曆&lt;/strong&gt;的同步，預設狀況下只能同步一個行事曆)&lt;/li&gt;
&lt;li&gt;通訊錄&lt;/li&gt;
&lt;li&gt;工作表 (tasks)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這些都是我在 iPhone 上相當依賴的功能，雖然 iPhone 跟 Google 在通訊錄方面的整合上有點小問題，但是用起來還是相當方便的。&lt;/p&gt;
&lt;p&gt;提供給有興趣的朋友使用 :P&lt;/p&gt;
- https://blog.crboy.net/posts/google-account-on-iphone/ - </description>
        </item>
    
    
    
        <item>
        <title>C, C&#43;&#43; 中沒有 return 敘述的 main function</title>
        <link>https://blog.crboy.net/posts/main-function-without-return-statement/</link>
        <pubDate>Thu, 05 Apr 2012 02:47:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/main-function-without-return-statement/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/main-function-without-return-statement/ -&lt;p&gt;今天在噗浪上討論+研究了一個問題，這邊記錄一下，不然每次查完資料都會忘記= =&lt;br&gt;
相關的討論在&lt;a href=&#34;http://www.plurk.com/p/g1jmz4/&#34;&gt;這則噗浪&lt;/a&gt;上，如果有興趣也可以去看。&lt;/p&gt;
&lt;p&gt;我所研究的問題很簡單，「在 C/C++ 語言中，main function 不寫上 return statement 的話，會怎樣？」因為有些人會寫上 void main () 這種 prototype (我想有個原因是 Visual C++ 6.0 預設就這樣搞)，或是有些人寫了 &lt;code&gt;int main ()&lt;/code&gt; 但是卻沒在 main function 中寫上 return 0; 或是 return EXIT_SUCCESS;。那麼，到底會不會出現問題呢？&lt;/p&gt;
&lt;p&gt;我在網路上找到一份號稱是 ANSI C 的 spec，希望我沒有被詐騙，該份 spec 的連結&lt;a href=&#34;http://flash-gordon.me.uk/ansi.c.txt&#34;&gt;在此&lt;/a&gt;。&lt;br&gt;
根據這份文件，其中有兩個部分可以解決我的疑惑：&lt;/p&gt;
&lt;p&gt;2.1.2.2&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If the main function executes a return that specifies no value, the termination status returned to the host environment is undefined.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;3.6.6.4&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;If a return statement without an expression is executed, and the value of the function call is used by the caller, the behavior is undefined.  Reaching the } that terminates a function is equivalent to executing a return statement without an expression.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;根據以上兩個節錄出來的部分，我們知道，如果 main function 宣告 return type 為 int 且寫了沒有值的 return 的話(就是單純的 &lt;code&gt;return;&lt;/code&gt;)，那麼執行環境所收到的程式回傳狀態為「未定義的」(根據 2.1.2.2)。我們又知道，沒有寫 return statement 的話，當程式執行到 function 結尾的 } 的時候，就相當於執行了沒有值的 return。(根據 3.6.6.4)&lt;/p&gt;
&lt;p&gt;再來，2.1.2.2 也提到這個&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The function called at program startup is named main. The implementation declares no prototype for this function. It can be defined with no parameters:&lt;/p&gt;
&lt;p&gt;int main(void) { /&lt;em&gt;&amp;hellip;&lt;/em&gt;/ }&lt;/p&gt;
&lt;p&gt;or with two parameters (referred to here as argc and argv , though any names may be used, as they are local to the function in which they are declared):&lt;/p&gt;
&lt;p&gt;int main(int argc, char &lt;em&gt;argv[]) { /&lt;/em&gt;&amp;hellip;*/ }&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;雖然我不敢完全肯定，但我認為，main function 的 return type 勢必要被定為 int。所以 void main () 是不被允許的才對。(此處若我對規範有誤解的話，煩請指正！)&lt;/p&gt;
&lt;p&gt;綜合以上，如果 main function 不寫回傳值的話，在 C 語言的規範中，他的程式狀態是未定義的！&lt;/p&gt;
&lt;p&gt;那麼 C++ 呢？&lt;/p&gt;
&lt;p&gt;根據噗浪上提出回應的 &lt;a href=&#34;http://www.plurk.com/PkmX&#34;&gt;PkmX&lt;/a&gt; 大大表示&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C++11 3.6.5: &amp;hellip; If control reaches the end of main without encountering a return statement, the eﬀect is that of executing return 0;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以說在 C++ 中，不寫 return statement 的 main function 是被視為正常結束 (&lt;code&gt;return 0;&lt;/code&gt;) 的。&lt;/p&gt;
&lt;p&gt;此外，在 StackOverflow 上也有得參考，連結&lt;a href=&#34;http://stackoverflow.com/questions/204476/what-should-main-return-in-c-c&#34;&gt;在此&lt;/a&gt;。底下也很歡迎提出相關意見唷！:D&lt;/p&gt;
- https://blog.crboy.net/posts/main-function-without-return-statement/ - </description>
        </item>
    
    
    
        <item>
        <title>如何設定 Gmail 帳戶收取 Google Apps 帳戶的信件</title>
        <link>https://blog.crboy.net/posts/how-to-setup-pop3-for-google-apps/</link>
        <pubDate>Tue, 03 Apr 2012 22:00:00 +0000</pubDate>
        
        <guid>https://blog.crboy.net/posts/how-to-setup-pop3-for-google-apps/</guid>
        <description>CrBoy&#39;s blog https://blog.crboy.net/posts/how-to-setup-pop3-for-google-apps/ -&lt;p&gt;今天學弟在問，要怎麼在自己的 Gmail 信箱中，收取實驗室信箱的 e-mail。我們實驗室的 e-mail 本來是自己架設，不過現在已經轉換到 Google Apps 上去了。而 Google Apps 的帳號其實相當於另一個 Gmail 帳號，除非管理員設定不允許外部 POP3 與 IMAP，否則其實跟一般設定沒什麼兩樣。&lt;/p&gt;
&lt;p&gt;設定這個可分為兩個部分：在要被收信的信箱開啟 POP3 功能，以及在要用來收信的信箱(通常是自己的 Gmail 帳號)設定收取 POP3 信件。&lt;/p&gt;
&lt;h1 id=&#34;第一部分-在被收信的帳戶中設定&#34;&gt;第一部分 (在「被收信」的帳戶中設定)&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;1.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
進入 Gmail 設定&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;2.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
點選「轉寄和 POP/IMAP」&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;3.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
點選啟用 POP 功能。至於要收取「所有郵件」或是「現在起所收到的郵件」則是看個人需求。另外，可在這裡設定郵件被收走後，是否要保留？我的習慣是讓他標為已讀，你也可以選擇封存或刪除。&lt;/p&gt;
&lt;h1 id=&#34;第二部分-在用來收信的帳戶中設定&#34;&gt;第二部分 (在「用來收信」的帳戶中設定)&lt;/h1&gt;
&lt;p&gt;&lt;img src=&#34;4.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
在 Gmail 設定中點選「帳戶」&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;5.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
點選「以 POP3 檢查郵件」下面的「新增您的 POP3 郵件帳戶」，會出現下面的視窗&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;6.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
輸入「被收信」的帳戶的 e-mail address，如圖例&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;7.png&#34; alt=&#34;&#34;&gt;&lt;br&gt;
系統會自動幫你填上對應的資訊，但是這個資訊是錯的！必須自行修改，可參考&lt;a href=&#34;http://support.google.com/mail/bin/answer.py?hl=zh-Hant&amp;amp;answer=13287&#34;&gt;這個連結&lt;/a&gt;。使用者名稱是你的完整 e-mail address，並輸入你的密碼。POP 伺服器要設定為 &lt;code&gt;pop.gmail.com&lt;/code&gt;，port 為 995，並啟用 SSL。我的習慣是會把收來的郵件自動加上一個標籤，這樣可以用標籤區分是哪裡收來的信。&lt;/p&gt;
&lt;p&gt;設定到這裡其實已經差不多了。如果除了收信以外，也想利用那個信箱的 address 來寄信的話，可以透過 Gmail 幫你寄就可以，畢竟根本都是同樣的機器XD&lt;/p&gt;
&lt;p&gt;補充一個小東西，Gmail Labs (研究室) 裡面有一個有趣的功能，我覺得可以打開。它叫做「重新整理 POP 帳戶」，可以讓你點選首頁的「重新整理」就可以立刻收取外部信箱的信！個人覺得滿實用的 :P&lt;/p&gt;
&lt;p&gt;PS. 突然想到一個問題是，如果有開啟 two-step verification 的話，是要&amp;hellip;.? 我猜應該是要用應用程式密碼吧？沒試過，有經驗的朋友們可以在底下分享一下。:)&lt;/p&gt;
- https://blog.crboy.net/posts/how-to-setup-pop3-for-google-apps/ - </description>
        </item>
    
    
  </channel>
</rss> 